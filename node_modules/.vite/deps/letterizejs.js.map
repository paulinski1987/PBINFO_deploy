{
  "version": 3,
  "sources": ["../../letterizejs/lib/letterize.js"],
  "sourcesContent": ["/**\n * letterize.js v2.0.0\n * (c) 2021 Wojciech Krakowiak\n * Released under the MIT license\n * https://github.com/WojciechWKROPCE/letterize\n */\n\n/*jshint esversion: 6 */\r\nconst getTargets = (targets) => {\r\n    if (targets instanceof NodeList ||\r\n        targets instanceof HTMLCollection ||\r\n        Array.isArray(targets)) {\r\n        return targets;\r\n    }\r\n    else if (targets instanceof HTMLElement) {\r\n        return [targets];\r\n    }\r\n    else if (typeof targets === \"string\") {\r\n        return document.querySelectorAll(targets);\r\n    }\r\n    return null;\r\n};\r\nconst deconstructText = (node, wrapper, className) => {\r\n    const text = node.textContent.trim();\r\n    const textLength = text.length;\r\n    const list = [];\r\n    node.textContent = \"\";\r\n    for (let n = 0; n < textLength; n++) {\r\n        const letterNode = document.createElement(wrapper);\r\n        if (className && className.length)\r\n            letterNode.classList.add(className);\r\n        // Replace spaces with &nbsp; so it has width after letterizing\r\n        letterNode.textContent = text[n] === \" \" ? \"\\xa0\" : text[n];\r\n        node.before(letterNode);\r\n        list.push(letterNode);\r\n    }\r\n    return list;\r\n};\r\nconst deconstructObjects = (targets, target, wrapper, className, list, listAll, i, id) => {\r\n    if (!Array.isArray(target.letterize_id)) {\r\n        target.letterize_id = [];\r\n    }\r\n    if (!target.letterize_id.includes(id)) {\r\n        target.letterize_id.push(id);\r\n        const nodeList = [...target.childNodes];\r\n        const nodeListLength = nodeList.length;\r\n        for (let j = 0; j < nodeListLength; j++) {\r\n            let listPart;\r\n            switch (nodeList[j].nodeType) {\r\n                case 1:\r\n                    if (Array.prototype.indexOf.call(targets, nodeList[j]) === -1) {\r\n                        // Check if current nodeList[j] wasn't deconstructed (it can happen if a target node is in another target node).\r\n                        deconstructObjects(targets, nodeList[j], wrapper, className, list, listAll, i, id);\r\n                    }\r\n                    break;\r\n                case 3:\r\n                    listPart = deconstructText(nodeList[j], wrapper, className);\r\n                    listAll.push(...listPart);\r\n                    list[i].push(...listPart);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n};\r\nclass Letterize {\r\n    constructor(params) {\r\n        const targets = getTargets(params.targets);\r\n        if (!targets || !targets.length) {\r\n            console.error(`Letterize: targets '${targets}' not found or not specified`);\r\n            return;\r\n        }\r\n        const targetsLength = targets.length;\r\n        Letterize.numInstances = (Letterize.numInstances || 0) + 1;\r\n        const wrapper = params.wrapper || \"span\";\r\n        const className = params.className;\r\n        const id = Letterize.numInstances;\r\n        const list = [];\r\n        const listAll = [];\r\n        for (let i = 0; i < targetsLength; i++) {\r\n            list[i] = [];\r\n            deconstructObjects(targets, targets[i], wrapper, className, list, listAll, i, id);\r\n        }\r\n        this._wrapper = wrapper;\r\n        this._targets = targets;\r\n        this._list = list;\r\n        this._listAll = listAll;\r\n        this._className = className;\r\n    }\r\n    get listAll() {\r\n        return this._listAll;\r\n    }\r\n    get list() {\r\n        return this._list;\r\n    }\r\n    get targets() {\r\n        return this._targets;\r\n    }\r\n    get className() {\r\n        return this._className;\r\n    }\r\n    get wrapper() {\r\n        return this._wrapper;\r\n    }\r\n    deletterize() {\r\n        const listLength = this.listAll.length;\r\n        for (let i = 0; i < listLength; i++) {\r\n            this.listAll[i].before(...Array.from(this.listAll[i].childNodes));\r\n            this.listAll[i].remove();\r\n        }\r\n        this._wrapper = undefined;\r\n        this._targets = undefined;\r\n        this._list = undefined;\r\n        this._listAll = undefined;\r\n        this._className = undefined;\r\n        this.deletterize = undefined;\r\n    }\r\n}\n\nexport default Letterize;\n"],
  "mappings": ";;;AAQA,IAAM,aAAa,CAAC,YAAY;AAC5B,MAAI,mBAAmB,YACnB,mBAAmB,kBACnB,MAAM,QAAQ,OAAO,GAAG;AACxB,WAAO;AAAA,EACX,WACS,mBAAmB,aAAa;AACrC,WAAO,CAAC,OAAO;AAAA,EACnB,WACS,OAAO,YAAY,UAAU;AAClC,WAAO,SAAS,iBAAiB,OAAO;AAAA,EAC5C;AACA,SAAO;AACX;AACA,IAAM,kBAAkB,CAAC,MAAM,SAAS,cAAc;AAClD,QAAM,OAAO,KAAK,YAAY,KAAK;AACnC,QAAM,aAAa,KAAK;AACxB,QAAM,OAAO,CAAC;AACd,OAAK,cAAc;AACnB,WAAS,IAAI,GAAG,IAAI,YAAY,KAAK;AACjC,UAAM,aAAa,SAAS,cAAc,OAAO;AACjD,QAAI,aAAa,UAAU;AACvB,iBAAW,UAAU,IAAI,SAAS;AAEtC,eAAW,cAAc,KAAK,CAAC,MAAM,MAAM,MAAS,KAAK,CAAC;AAC1D,SAAK,OAAO,UAAU;AACtB,SAAK,KAAK,UAAU;AAAA,EACxB;AACA,SAAO;AACX;AACA,IAAM,qBAAqB,CAAC,SAAS,QAAQ,SAAS,WAAW,MAAM,SAAS,GAAG,OAAO;AACtF,MAAI,CAAC,MAAM,QAAQ,OAAO,YAAY,GAAG;AACrC,WAAO,eAAe,CAAC;AAAA,EAC3B;AACA,MAAI,CAAC,OAAO,aAAa,SAAS,EAAE,GAAG;AACnC,WAAO,aAAa,KAAK,EAAE;AAC3B,UAAM,WAAW,CAAC,GAAG,OAAO,UAAU;AACtC,UAAM,iBAAiB,SAAS;AAChC,aAAS,IAAI,GAAG,IAAI,gBAAgB,KAAK;AACrC,UAAI;AACJ,cAAQ,SAAS,CAAC,EAAE,UAAU;AAAA,QAC1B,KAAK;AACD,cAAI,MAAM,UAAU,QAAQ,KAAK,SAAS,SAAS,CAAC,CAAC,MAAM,IAAI;AAE3D,+BAAmB,SAAS,SAAS,CAAC,GAAG,SAAS,WAAW,MAAM,SAAS,GAAG,EAAE;AAAA,UACrF;AACA;AAAA,QACJ,KAAK;AACD,qBAAW,gBAAgB,SAAS,CAAC,GAAG,SAAS,SAAS;AAC1D,kBAAQ,KAAK,GAAG,QAAQ;AACxB,eAAK,CAAC,EAAE,KAAK,GAAG,QAAQ;AACxB;AAAA,MACR;AAAA,IACJ;AAAA,EACJ;AACJ;AACA,IAAM,YAAN,MAAM,WAAU;AAAA,EACZ,YAAY,QAAQ;AAChB,UAAM,UAAU,WAAW,OAAO,OAAO;AACzC,QAAI,CAAC,WAAW,CAAC,QAAQ,QAAQ;AAC7B,cAAQ,MAAM,uBAAuB,OAAO,8BAA8B;AAC1E;AAAA,IACJ;AACA,UAAM,gBAAgB,QAAQ;AAC9B,eAAU,gBAAgB,WAAU,gBAAgB,KAAK;AACzD,UAAM,UAAU,OAAO,WAAW;AAClC,UAAM,YAAY,OAAO;AACzB,UAAM,KAAK,WAAU;AACrB,UAAM,OAAO,CAAC;AACd,UAAM,UAAU,CAAC;AACjB,aAAS,IAAI,GAAG,IAAI,eAAe,KAAK;AACpC,WAAK,CAAC,IAAI,CAAC;AACX,yBAAmB,SAAS,QAAQ,CAAC,GAAG,SAAS,WAAW,MAAM,SAAS,GAAG,EAAE;AAAA,IACpF;AACA,SAAK,WAAW;AAChB,SAAK,WAAW;AAChB,SAAK,QAAQ;AACb,SAAK,WAAW;AAChB,SAAK,aAAa;AAAA,EACtB;AAAA,EACA,IAAI,UAAU;AACV,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,IAAI,OAAO;AACP,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,IAAI,UAAU;AACV,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,IAAI,YAAY;AACZ,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,IAAI,UAAU;AACV,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,cAAc;AACV,UAAM,aAAa,KAAK,QAAQ;AAChC,aAAS,IAAI,GAAG,IAAI,YAAY,KAAK;AACjC,WAAK,QAAQ,CAAC,EAAE,OAAO,GAAG,MAAM,KAAK,KAAK,QAAQ,CAAC,EAAE,UAAU,CAAC;AAChE,WAAK,QAAQ,CAAC,EAAE,OAAO;AAAA,IAC3B;AACA,SAAK,WAAW;AAChB,SAAK,WAAW;AAChB,SAAK,QAAQ;AACb,SAAK,WAAW;AAChB,SAAK,aAAa;AAClB,SAAK,cAAc;AAAA,EACvB;AACJ;AAEA,IAAO,oBAAQ;",
  "names": []
}
